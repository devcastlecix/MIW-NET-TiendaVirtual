@model TiendaVirtual.Models.ProductoLibro

@{
    ViewBag.Title = "Editar";
}

<br />
<h2>
    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-gear-fill" viewBox="0 0 16 16">
        <path d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z" />
    </svg>
    <strong>Modificar producto de Libro</strong>
</h2>

<div class="d-flex">

    <div class="flex-fill">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", rows = 5 })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CantidadDisponible, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CantidadDisponible, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CantidadDisponible, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImagenVinculada, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ImagenVinculada, (SelectList)ViewBag.Images, new { @class = "form-control form-select", id = "ImagenVinculada" })
                        @Html.ValidationMessageFor(model => model.ImagenVinculada, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" class="btn btn-primary mt-2" />
                    </div>
                </div>

                @if (TempData["ValidationMessage"] != null)
                {
                    <div class="alert alert-warning alert-dismissible fade show mt-3" role="alert">
                        @Html.Raw(@TempData["ValidationMessage"])
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
            </div>
        }

        <div>
            @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-secondary mt-2" })
        </div>
    </div>


    <div class="flex-fill d-flex align-items-center justify-content-center">
        <div id="previewContainer" style="width: 300px; height: 370px; border: 1px solid #ccc;">
            <img id="previewImage" src="@Url.Content("~/Images/"+Model.ImagenVinculada)" class="img-thumbnail" alt="Imagen seleccionada" style="width:100%; height:100%; object-fit: contain;" />
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
$(document).ready(function () {
            $('#ImagenVinculada').change(function () {
                var imagePath = $(this).val();
                imagePath = '/Images/' + imagePath;
                $('#previewImage').attr('src', imagePath);
            });
        });</script>
}